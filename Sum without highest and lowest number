/* 
Sum all the numbers of the array (in F# and Haskell you get a list) except the highest and the lowest element (the value, not the index!).
(The highest/lowest element is respectively only one element at each edge, even if there are more than one with the same value!)

Example:

{ 6, 2, 1, 8, 10 } => 16
{ 1, 1, 11, 2, 3 } => 6

If array is empty, null or None, or if only 1 Element exists, return 0.
*/

function sumArray(arr) {
  if(arr === null || arr.length <= 1) return 0;
  let arr1 = [];
  let max = arr[0];
  let min = arr[0];
  let sum = 0;
  for(let i = 1; i < arr.length; i++){
    if(max<arr[i]) max = arr[i];
    if(min>arr[i]) min = arr[i];
  }
  for(let j = 0; j < arr.length; j++){
    sum+=arr[j];
  }
  sum = sum - max;
  sum = sum - min;
  return sum;
}
